/**
 * Sample .jshintrc file, showing options from http://www.jshint.com/docs/options/ as at 21/05/2014.
 */
{
// Enforcing Options
    "bitwise": true,     // true: Prohibit bitwise operators (&, |, ^, etc.)
    "camelcase": true,    // true: Identifiers must be in camelCase
    "curly": true,     // true: Require {} for every new block or scope
    "eqeqeq": true,     // true: Require triple equals (===) for comparison
    "es3": true,        // true: adhere to ECMAScript 3 specification - for older browsers such as IE 6/7/8/9
    "forin": true,     // true: Require filtering for..in loops with obj.hasOwnProperty()
    "freeze": true,     // true: Prohibit overwriting prototypes of native objects such as Array, Date and so on.
    "immed": false,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
    "indent": false,        // {int} Number of spaces to use for indentation
    "latedef": true,    // true: Require variables/functions to be defined before being used
    "newcap": true,    // true: Require capitalization of all constructor functions e.g. `new F()`
    "noarg": true,     // true: Prohibit use of `arguments.caller` and `arguments.callee`
    "noempty": true,     // true: Prohibit use of empty blocks
    "nonbsp": true,     // true: warn about "non-breaking whitespace" characters --> can break non-UTF8 web pages
    "nonew": true,    // true: Prohibit use of constructors for side-effects (without assignment)
    "plusplus": true,    // true: Prohibit use of `++` & `--`
    "quotmark": true,    // Quotation mark consistency:
    //   false    : do nothing (default)
    //   true     : ensure whatever is used is consistent
    //   "single" : require single quotes
    //   "double" : require double quotes
    "undef": true,     // true: Require all non-global variables to be declared (prevents global leaks)
    "unused": true,     // true: Require all defined variables be used
    "strict": true,     // true: Requires all functions run in ES5 Strict Mode
    "trailing": true,   // true: makes it an error to leave a trailing whitespace in your code.
    "maxparams": false,    // {int} Max number of formal params allowed per function
    "maxdepth": false,    // {int} Max depth of nested blocks (within functions)
    "maxstatements": false,    // {int} Max number statements per function
    "maxcomplexity": false,    // {int} Max cyclomatic complexity per function
    "maxlen": false,    // {int} Max number of characters per line

// Relaxing options
    "asi": false,     // true: Tolerate Automatic Semicolon Insertion (no semicolons)
    "boss": false,     // true: Tolerate assignments where comparisons would be expected
    "debug": false,     // true: Allow debugger statements e.g. browser breakpoints.
    "eqnull": false,     // true: Tolerate use of `== null`
    "esnext": false,     // true: Allow ES.next (ECMAScript 6) specific syntax (ex: `const`)
    // (ex: `for each`, multiple try/catch, function expressionâ€¦)
    "evil": false,     // true: Tolerate use of `eval` and `new Function()`
    "expr": false,     // true: Tolerate use of expressions where normally you expect assignments or function calls
    "funcscope": false,     // true: Tolerate defining variables inside control statements"
    "gcl": false,       // true: makes JSHint compatible with Google Closure Compiler.
    "globalstrict": false,     // true: Allow global "use strict" (also enables 'strict')
    "iterator": false,     // true: Tolerate using the `__iterator__` property
    "lastsemic": false,     // true: Tolerate omitting a semicolon for the last statement of a 1-line block
    "laxbreak": false,     // true: Tolerate possibly unsafe line breakings
    "laxcomma": false,     // true: Tolerate comma-first style coding
    "loopfunc": false,     // true: Tolerate functions being defined in loops
    "maxerr": 50,       // {int} Maximum error before stopping
    "moz": false,       // true: code uses Mozilla JavaScript extensions - for Firefox specific dev only
    "multistr": false,     // true: Tolerate multi-line strings
    "notypeof": false,      // true: suppress warnings about invalid typeof operator values
    "proto": false,     // true: Tolerate using the `__proto__` property
    "scripturl": false,     // true: Tolerate script-targeted URLs
    "shadow": false,     // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
    "smarttabs": false, // true: suppress warnings about mixed tabs and spaces when spaces used for alignmnent only
    "sub": false,     // true: Tolerate using `[]` notation when it can still be expressed in dot notation
    "supernew": false,     // true: Tolerate `new function () { ... };` and `new Object;`
    "validthis": false,     // true: Tolerate using this in a non-constructor function
    "noyield": false,       // true: suppress warnings about generator functions with no yield statement in them.

// Environments
    "browser": false,     // Web Browser (window, document, etc)
    "couch": false,    // CouchDB
    "devel": false,     // Development/debugging (alert, confirm, etc)
    "dojo": false,    // Dojo Toolkit
    "jquery": false,    // jQuery
    "mootools": false,    // MooTools
    "node": false,    // Node.js
    "nonstandard": false,    // Widely adopted globals (escape, unescape, etc)
    "phantom": false,    // PhantomJS
    "prototypejs": false,    // Prototype and Scriptaculous
    "rhino": false,    // Rhino
    "worker": false,    // Web Workers
    "wsh": false,    // Windows Scripting Host
    "yui": false,    // Yahoo User Interface

// Custom Globals
// additional predefined global variables
    "globals": {
        "Ext": false,   // ExtJS
    }        
}
